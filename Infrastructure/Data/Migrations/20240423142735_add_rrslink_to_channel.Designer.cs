// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240423142735_add_rrslink_to_channel")]
    partial class add_rrslink_to_channel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Common.Entities.Channel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Уникальный идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasComment("Дата создания");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description")
                        .HasComment("Описание канала новостей");

                    b.Property<bool>("IsFixed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_fixed")
                        .HasComment("Флаг фиксации. Позволяет защитить канал от удаления.");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("link")
                        .HasComment("URL канала");

                    b.Property<string>("RssLink")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rss_link")
                        .HasComment("URL RSS канала");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title")
                        .HasComment("Заголовок канала новостей");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasComment("Дата обновления");

                    b.HasKey("Id")
                        .HasName("pk_channels");

                    b.ToTable("channels", (string)null);
                });

            modelBuilder.Entity("Core.Common.Entities.News", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasComment("Уникальный идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ChannelId")
                        .HasColumnType("bigint")
                        .HasColumnName("channel_id")
                        .HasComment("ID канала");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasComment("Дата создания");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description")
                        .HasComment("Описание");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("link")
                        .HasComment("Ссылка на новость");

                    b.Property<DateTime>("PubDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("pub_date")
                        .HasComment("Дата публикации");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title")
                        .HasComment("Заголовок");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasComment("Дата обновления");

                    b.HasKey("Id")
                        .HasName("pk_news");

                    b.HasIndex("ChannelId")
                        .HasDatabaseName("ix_news_channel_id");

                    b.ToTable("news", (string)null);
                });

            modelBuilder.Entity("Core.Common.Entities.News", b =>
                {
                    b.HasOne("Core.Common.Entities.Channel", "Channel")
                        .WithMany("News")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_news_channels_channel_id");

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("Core.Common.Entities.Channel", b =>
                {
                    b.Navigation("News");
                });
#pragma warning restore 612, 618
        }
    }
}
